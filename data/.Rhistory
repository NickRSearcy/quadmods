mixed$target <- mixed$Answer.choice=="\"target\""
mixed$logical <- mixed$Answer.choice=="\"logical\""
mixed$foil <- mixed$Answer.choice=="\"foil\""
mixed_fav = mixed[mixed$Answer.linguistic_framing == 7,]
mixed_lea = mixed[mixed$Answer.linguistic_framing == 8,]
ms.mixed_fav <- aggregate(cbind(target,
logical,
foil) ~
Answer.item, data=mixed_fav, sum)
ms.mixed_fav
ms.mixed_lea <- aggregate(cbind(target,
logical,
foil) ~
Answer.item, data=mixed_lea, sum)
mixed_fav$target
mean(mixed_fav$target)
mean.lea <- mean(mixed_lea$target); mean.lea
ms.mixed_lea
mean.fav <- mean(mixed_fav$logical); mean.fav
mean.fav <- mean(mixed_fav$target); mean.fav
mean.fav <- mean(mixed_fav$foil); mean.fav
mean.lea <- mean(mixed_lea$target); mean.lea
mean.lea <- mean(mixed_lea$logical); mean.lea
mean.lea <- mean(mixed_lea$target); mean.lea
mean.lea <- mean(mixed_lea$foil); mean.lea
names)(mixed)
names(mixed)
mixed$Answer.gender
length(mixed$Answer.gender)
patch <- read.csv("/Users/andesgomez/Documents/Stanford/Autumn2013-Masters/PayedWork/andres_data/Spring2014/patch_oddone_no_fam_14_may_PATCH.csv",
header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
patch$odd_one <- patch$Answer.choice=="\"odd_one\""
patch$twin_1 <- patch$Answer.choice=="\"twin_1\""
patch$twin_2 <- patch$Answer.choice=="\"twin_2\""
compliant <- patch$Answer.manip_check_target == "\"2\"" & patch$Answer.manip_check_dist == "\"2\"" & patch$Answer.manip_check_foil == "\"2\"" & patch$Answer.name_check_correct == "\"TRUE\""
patch_compliant <- subset(patch,compliant)
patch_subset = subset(patch_compliant, patch_compliant$Answer.linguistic_framing_condition == 9)
word_subset = subset(patch_compliant, patch_compliant$Answer.linguistic_framing_condition == 10)
patch_table <- aggregate(cbind(odd_one,
twin_1,
twin_2) ~
Answer.linguistic_framing_condition , data=patch_compliant, sum)
patch_table
patch_table <- aggregate(cbind(odd_one,
twin_1,
twin_2) ~
Answer.linguistic_framing_condition + Answer.item, data=patch_compliant, sum)
patch_table
patch_by_item <- aggregate(cbind(odd_one,
twin_1,
twin_2) ~
Answer.item, data=patch_subset, sum)
patch_by_item
word_by_item <- aggregate(cbind(odd_one,
twin_1,
twin_2) ~
Answer.item, data=word_subset, sum)
word_by_item
library(plyr)
library(reshape2)
library(ggplot2)
library(binom)
md <- melt(patch_compliant, measure.vars = c("odd_one","twin_1","twin_2"), variable.name="object", value.name="chosen")
ms <- ddply(md, .(object, Answer.item), #Answer.item,
summarise,
c = mean(chosen),
n = sum(chosen),
l = length(chosen),
sdc = sd(chosen),
c.cih = c + (sdc/l^.5),
c.cil = c - (sdc/l^.5))
ms$item <- factor(ms$Answer.item)
levels(ms$item) <- c("boat","friend", "pizza", "snowman", "sundae", "Christmas tree")
ggplot(ms, aes(x= item, y=c, fill=object)) +
geom_bar(position=position_dodge()) +
geom_linerange(aes(ymin=c.cil,ymax=c.cih),
position=position_dodge(width=.9)) +
ylab("Probability of choosing")
head(patch_compliant)
ms <- ddply(patch_compliant, .(Answer.linguistic_framing_condition,Answer.item),
function(x) {
y <- data.frame(choice=c("odd_one","twin_1","twin_2"),
proportion=c(mean(x$odd_one),mean(x$twin_1),mean(x$twin_2)))
return(y)
})
ms$frame <- factor(ms$Answer.linguistic_framing_condition)
levels(ms$frame) <- c("patch","word")
ms$item <- factor(ms$Answer.item)
qplot(item, proportion, fill=choice, facets = . ~ frame,
geom="bar",
data=ms)
patch_table <- aggregate(cbind(odd_one,
twin_1,
twin_2) ~
Answer.linguistic_framing_condition , data=patch_compliant, sum)
md <- melt(patch_table, id.vars=c("Answer.item","Answer.linguistic_framing_condition"))
qplot()
patch_table
patch_table <- aggregate(cbind(odd_one,
twin_1,
twin_2) ~
Answer.linguistic_framing_condition , data=patch_compliant, sum)
patch_table
patch_table <- aggregate(cbind(odd_one,
twin_1,
twin_2) ~
Answer.linguistic_framing_condition + Answer.item, data=patch_compliant, sum)
patch_table
names(patch)
patch$Answer.image_version
names(patch)
patch$Answer.hand_position
patch_table <- aggregate(cbind(odd_one,
twin_1,
twin_2) ~
Answer.linguistic_framing_condition , data=patch_compliant, sum)
patch_table
patch_table <- aggregate(cbind(odd_one,
twin_1,
twin_2) ~
Answer.linguistic_framing_condition , data=patch_compliant, mean)
patch_table
library(reshape)
library(ggplot2)
library(ddplyr)
install.packages("ddplyr")
install.packages("reshape")
library(reshape)
library(ggplot2)
install.packages("ddplyr")
library(ddplyr)
source("analysis/helper.R")
d <- read.csv("/Users/andesgomez/Documents/Stanford/pragmods_2015/raw_data/forced_choice_no_fam_6random_count_baseratesmy_14jan2015_BASERATES.csv",
header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
d <- read.csv("/Users/andesgomez/Documents/Stanford/pragmods_2015/pragmods/data/1-prelims/linguistic_framing/forced_choice_no_fam_6random_count_baseratesmy_14jan2015_BASERATES.csv",
header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
d <- read.csv("/Users/andesgomez/Documents/Stanford/pragmods_2015/pragmods/data/1-prelims/linguistic_framing/forced_choice_no_fam_6random_count_baseratesmy_14jan2015_BASERATES.tsv",
header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
d <- read.csv("/Users/andesgomez/Documents/Stanford/pragmods_2015/pragmods/data/1-prelims/linguistic_framing/forced_choice_no_fam_6random_count_baseratesmy_14jan2015_BASERATES.tsv",
header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
d <- read.csv("/Users/andesgomez/Documents/Stanford/pragmods_2015/pragmods/data/1-prelims/linguistic_framing/forced_choice_no_fam_6random_count_baseratesmy_14jan2015_BASERATES.tsv",
header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
d_compliant <- d$Answer.manip_check_target == "\"2\"" & d$Answer.manip_check_dist == "\"1\""
with_count_wrong <- subset(d,!d_compliant)
d <- subset(d,d_compliant)
d$target <- d$Answer.choice=="\"target\""
d$logical <- d$Answer.choice=="\"logical\""
d$foil <- d$Answer.choice=="\"foil\""
ms.d <- aggregate(cbind(target,
logical,
foil) ~
Answer.linguistic_framing_condition, data=d, mean)
ms.d
d <- read.csv("/Users/andesgomez/Documents/Stanford/pragmods_2015/raw_data/forced_choice_no_fam_6random_count_onewordmumble_21jan2015_WORDMUMBLE.csv",
header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
d <- read.csv("/Users/andesgomez/Documents/Stanford/pragmods_2015/raw_data/forced_choice_no_fam_6random_count_onewordmumble_21jan2015_WORDMUMBLE.tsv",
header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
d <- read.csv("/Users/andesgomez/Documents/Stanford/pragmods_2015/pragmods/data/1-prelims/linguistic_framing/forced_choice_no_fam_6random_count_onewordmumble_21jan2015_WORDMUMBLE.tsv",
header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
d <- read.csv("/Users/andesgomez/Documents/Stanford/pragmods_2015/pragmods/data/1-prelims/linguistic_framing
/forced_choice_no_fam_6random_count_onewordmumble_21jan2015_WORDMUMBLE.tsv",
header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
d <- read.csv("/Users/andesgomez/Documents/Stanford/pragmods_2015/pragmods/data/3-levels/levels
/forced_choice_no_fam_6random_count_onewordmumble_21jan2015_WORDMUMBLE.tsv",
header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
d <- read.csv("/Users/andesgomez/Documents/Stanford/pragmods_2015/pragmods/data/2-prior/measurement/forced_choice_no_fam_6random_count_onewordmumble_21jan2015_WORDMUMBLE.tsv",
header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
d <- read.csv("/Users/andesgomez/Documents/Stanford/pragmods_2015/pragmods/data/2-prior/measurement/forced_choice_no_fam_6random_count_onewordmumble_21jan2015_WORDMUMBLE.tsv",
header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
d_compliant <- d$Answer.manip_check_target == "\"2\"" & d$Answer.manip_check_dist == "\"1\""
with_count_wrong <- subset(d,!d_compliant)
d <- subset(d,d_compliant)
d$target <- d$Answer.choice=="\"target\""
d$logical <- d$Answer.choice=="\"logical\""
d$foil <- d$Answer.choice=="\"foil\""
ms.d <- aggregate(cbind(target,
logical,
foil) ~
Answer.question_type_condition, data=d, mean)
ms.d
ds <- read.csv("/Users/andesgomez/Documents/Stanford/pragmods_2015/pragmods/data/3-levels/levels/forced_choice_no_fam_6random_count_onewordmumble_22jan2015_SCALESBASE.csv", header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
ds_compliant <- ds$Answer.manip_check_target == "\"2\"" & ds$Answer.manip_check_dist == "\"1\""
with_count_wrong_s <- subset(ds,!ds_compliant)
ds <- subset(ds,ds_compliant)
ds$target <- ds$Answer.choice=="\"target\""
ds$logical <- ds$Answer.choice=="\"logical\""
ds$foil <- ds$Answer.choice=="\"foil\""
ms.ds <- aggregate(cbind(target,
logical,
foil) ~
Answer.question_type_condition, data=ds, mean)
ms.ds
ms.ds <- aggregate(cbind(target,
logical,
foil) ~
Answer.question_type_condition, data=ds, sum)
ms.ds
names(ds)
ds$foil
ds$comment
ds$Answer.comment
ds$Answer.about
twins <- read.csv("/Users/andesgomez/Documents/Stanford/pragmods_2015/pragmods/data/3-levels/twinsforced_choice_no_fam_6random_count_onewordmumble_11feb2015_TWINBASE.csv",
header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
twins <- read.csv("/Users/andesgomez/Documents/Stanford/pragmods_2015/pragmods/data/3-levels/twins/forced_choice_no_fam_6random_count_onewordmumble_11feb2015_TWINBASE.tsv",
header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
# Manipulation check
twins_compliant <- twins$Answer.manip_check_target == "\"1\"" & twins$Answer.manip_check_dist == "\"2\""
twins <- subset(twins, twins_compliant)
twin_position_chosen <- table(twins$Answer.position_chosen)
chisq.test(twin_position_chosen)
twins$twin <- twins$Answer.choice=="\"twin\""
twins$single <- twins$Answer.choice=="\"single\""
twins$left <- twins$Answer.position_chosen == "\"left\""
twins$middle <- twins$Answer.position_chosen == "\"middle\""
twins$right <- twins$Answer.position_chosen == "\"right\""
ms.twin <- aggregate(cbind(twin,
single,
left,
middle,
right) ~
Answer.item, data=twins, sum)
sum(twins$twin)
mean(twins$twin)
ms.twin
twins_compliant <- twins$Answer.manip_check_target == "\"1\"" & twins$Answer.manip_check_dist == "\"2\""
twins <- subset(twins, twins_compliant)
ms.twins <- aggregate(cbind(target,
logical,
foil) ~
Answer.question_type_condition, data=twins, mean)
twins$twin <- twins$Answer.choice=="\"twin\""
twins$single <- twins$Answer.choice=="\"single\""
twins$left <- twins$Answer.position_chosen == "\"left\""
twins$middle <- twins$Answer.position_chosen == "\"middle\""
twins$right <- twins$Answer.position_chosen == "\"right\""
ms.twins <- aggregate(cbind(twin,
single) ~
Answer.question_type_condition, data=twins, mean)
ms.twins
names(twins)
twins$Answer.question_type
twin_position_chosen <- table(twins$Answer.position_chosen)
twin_position_chosen
ms.twins <- aggregate(cbind(twin,
single) ~
Answer.question_type_condition, data=twins, mean)
ms.twins
length(twins$Answer.question_type)
odd_one <- read.csv("/Users/andesgomez/Documents/Stanford/pragmods_2015/pragmods/data/3-levels/oddman/forced_choice_no_fam_6random_3count_onewordmumble_11feb2015_ODDBASE.csv",
header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
odd_one <- read.csv("/Users/andesgomez/Documents/Stanford/pragmods_2015/pragmods/data/3-levels/oddman/forced_choice_no_fam_6random_3count_onewordmumble_11feb2015_ODDBASE.tsv",
header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
# Manipulation check
odd_one_compliant <- odd_one$Answer.manip_check_target == "\"2\"" & odd_one$Answer.manip_check_dist == "\"2\"" & odd_one$Answer.manip_check_foil == "\"2\""
odd_one <- subset(odd_one, odd_one_compliant)
# Overall Position
oddone_position_chosen <- table(odd_one$Answer.position_chosen)
chisq.test(oddone_position_chosen)
odd_one$left <- odd_one$Answer.position_chosen == "\"left\""
odd_one$middle <- odd_one$Answer.position_chosen == "\"middle\""
odd_one$right <- odd_one$Answer.position_chosen == "\"right\""
oddone_position_chosen <- table(odd_one$Answer.position_chosen)
odd_one$Answer.chosen
names(odd_one)
odd_one$Answer.choice
odd_one$choose_odd <- odd_one$Answer.choice == "\"odd_one\""
ms.odd_one <- aggregate(cbind(choose_odd) ~
Answer.question_type_condition, data=odd_one, mean)
ms.odd_one
odd_one_friend <- subset(odd_one, odd_one$Answer.item == "\"friend\"")
table(odd_one_friend$Answer.items_chosen)
odd_one_pizza <- subset(odd_one, odd_one$Answer.item == "\"pizza\"")
table(odd_one_pizza$Answer.items_chosen)
odd_one_boat <- subset(odd_one, odd_one$Answer.item == "\"boat\"")
table(odd_one_boat$Answer.items_chosen) # ?
odd_one_tree <- subset(odd_one, odd_one$Answer.item == "\"Christmas tree\"")
table(odd_one_tree$Answer.items_chosen)
odd_one_snowman <- subset(odd_one, odd_one$Answer.item == "\"snowman\"")
table(odd_one_snowman$Answer.items_chosen)
odd_one_sundae <- subset(odd_one, odd_one$Answer.item == "\"sundae\"")
table(odd_one_sundae$Answer.items_chosen) # ?
ms.odd_one <- aggregate(cbind(left,
middle,
right) ~
Answer.item, data=odd_one, sum)
ms.odd_one
mean(odd_one$left)
mean(odd_one$middle)
mean(odd_one$right)
d <- read.csv("/Users/andesgomez/Documents/Stanford/pragmods_2015/pragmods/data/2-prior/color/forced_choice_no_fam_6random_2count_oneword_23feb2015_COLORSALIENCE.csv",
header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
d_compliant <- d$Answer.manip_check_target == "\"2\"" & d$Answer.manip_check_dist == "\"1\""
with_count_wrong <- subset(d,!d_compliant)
d <- subset(d,d_compliant)
# to simplify
d$target <- d$Answer.choice=="\"target\""
d$logical <- d$Answer.choice=="\"logical\""
d$foil <- d$Answer.choice=="\"foil\""
d$c_left <- d$Answer.position_chosen == "\"left\""
d$c_middle <- d$Answer.position_chosen == "\"middle\""
d$c_right <- d$Answer.position_chosen == "\"right\""
# the old standard
control <- subset(d, d$Answer.color_salience == 0)
ds <- subset(d, !d$Answer.color_salience == 0)
ds$congruent_color_choice <- ds$Answer.position_with_color == ds$Answer.position_chosen
# Answer.color_salience -> 0 is standard, 1 is foil, 2 target, 3 is logical
# Choice of target, logical and foil depending on the colored picture
ms.d <- aggregate(cbind(target,
logical,
foil) ~
Answer.color_salience, data=d, sum)
ms.d
ms.d <- aggregate(cbind(target,
logical,
foil) ~
Answer.color_salience, data=d, mean)
ms.d
db <- read.csv("/Users/andesgomez/Documents/Stanford/pragmods_2015/pragmods/data/2-prior/color/forced_choice_no_fam_6random_2count_oneword_4mar2015_COLORBASE.tsv",
header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
db_compliant <- db$Answer.manip_check_target == "\"2\"" & db$Answer.manip_check_dist == "\"1\""
with_count_wrong <- subset(db,!db_compliant)
db <- subset(db,db_compliant)
# to simplify
db$target <- db$Answer.choice=="\"target\""
db$logical <- db$Answer.choice=="\"logical\""
db$foil <- db$Answer.choice=="\"foil\""
db$c_left <- db$Answer.position_chosen == "\"left\""
db$c_middle <- db$Answer.position_chosen == "\"middle\""
db$c_right <- db$Answer.position_chosen == "\"right\""
# Answer.color_salience -> 1 is foil, 2 target, 3 is logical
# Choice of target, logical and foil depending on the colored picture
ms.db <- aggregate(cbind(target,
logical,
foil) ~
Answer.color_salience, data=db, sum)
ms.db
ms.db <- aggregate(cbind(target,
logical,
foil) ~
Answer.color_salience, data=db, mean)
ms.db
cummulative_time_series <-
c(89,89,89,89,91,92, 92, 92, 93, 94, 04, 96, 9898, 98, 98, 103, 103, 103, 103, 103, 104, 104, 104, 104,
105, 105, 106, 107, 108, 108, 109, 110, 110, 112, 112, 113, 113, 113, 116, 119, 123, 126, 129, 133, 141,
144, 161, 168, 169, 172, 174, 184, 193, 207, 215, 224, 225)
plot(cummulative_time_series)
cummulative_time_series <-
c(89,89,89,89,91,92, 92, 92, 93, 94, 04, 96, 98,98, 98, 98, 103, 103, 103, 103, 103, 104, 104, 104, 104,
105, 105, 106, 107, 108, 108, 109, 110, 110, 112, 112, 113, 113, 113, 116, 119, 123, 126, 129, 133, 141,
144, 161, 168, 169, 172, 174, 184, 193, 207, 215, 224, 225)
plot(cummulative_time_series)
length(cummulative_time_series)
lm(cummulative_time_series ~ 1:58)
data.frame(cummulative_time_series)
cummulative_time_series$day = 300:357
cummulative_time_series$day
lm(cummulative_time_series ~ day, data = cummulative_time_series)
cummulative_time_series
cummulative_time_series
cbind((300:357, cummulative_time_series)
cummulative_time_series <-
c(89,89,89,89,91,92, 92, 92, 93, 94, 04, 96, 98,98, 98, 98, 103, 103, 103, 103, 103, 104, 104, 104, 104,
105, 105, 106, 107, 108, 108, 109, 110, 110, 112, 112, 113, 113, 113, 116, 119, 123, 126, 129, 133, 141,
144, 161, 168, 169, 172, 174, 184, 193, 207, 215, 224, 225)
plot(cummulative_time_series)
cummulative_time_series = data.frame(cummulative_time_series)
cummulative_time_series$day = cbind((300:357, cummulative_time_series)
cummulative_time_series$day = cbind(300:357, cummulative_time_series)
cummulative_time_series
cummulative_time_series <-
c(89,89,89,89,91,92, 92, 92, 93, 94, 94, 96, 98,98, 98, 98, 103, 103, 103, 103, 103, 104, 104, 104, 104,
105, 105, 106, 107, 108, 108, 109, 110, 110, 112, 112, 113, 113, 113, 116, 119, 123, 126, 129, 133, 141,
144, 161, 168, 169, 172, 174, 184, 193, 207, 215, 224, 225)
plot(cummulative_time_series)
cummulative_time_series = data.frame(cummulative_time_series)
cummulative_time_series$day = cbind(300:357, cummulative_time_series)
lm(cummulative_time_series ~ day, data = cummulative_time_series)
cummulative_time_series
lm(cummulative_time_series ~ day.cummulative_time_series, data = cummulative_time_series)
lm(cummulative_time_series ~ day, data = cummulative_time_series)
cummulative_time_series <-
c(89,89,89,89,91,92, 92, 92, 93, 94, 94, 96, 98,98, 98, 98, 103, 103, 103, 103, 103, 104, 104, 104, 104,
105, 105, 106, 107, 108, 108, 109, 110, 110, 112, 112, 113, 113, 113, 116, 119, 123, 126, 129, 133, 141,
144, 161, 168, 169, 172, 174, 184, 193, 207, 215, 224, 225)
plot(cummulative_time_series)
cummulative_time_series = data.frame(cummulative_time_series)
cummulative_time_series$day = cbind(as.vector(300:357), cummulative_time_series)
lm(cummulative_time_series ~ day, data = cummulative_time_series)
cummulative_time_series
names(cummulative_time_series)
names(cummulative_time_series) = c("likes", "days")
lm(likes ~ days, data = cummulative_time_series)
data.frame(300:357)
cummulative_time_series <-
c(89,89,89,89,91,92, 92, 92, 93, 94, 94, 96, 98,98, 98, 98, 103, 103, 103, 103, 103, 104, 104, 104, 104,
105, 105, 106, 107, 108, 108, 109, 110, 110, 112, 112, 113, 113, 113, 116, 119, 123, 126, 129, 133, 141,
144, 161, 168, 169, 172, 174, 184, 193, 207, 215, 224, 225)
plot(cummulative_time_series)
cummulative_time_series = data.frame(cummulative_time_series)
cummulative_time_series$day = cbind(data.frame(300:357), cummulative_time_series)
names(cummulative_time_series) = c("likes", "days")
lm(likes ~ days, data = cummulative_time_series)
headi
d <- read.csv("experiment_1.tsv", header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
d1 <- read.csv("experiment_2.tsv", header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
setwd("~/Documents/Stanford/quadmods/data")
d <- read.csv("experiment_1.tsv", header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
d1 <- read.csv("experiment_2.tsv", header=TRUE, sep="\t", row.names=NULL, stringsAsFactors = FALSE)
d <- rbind(d, d1)
n_participants <- length(d$Answer.training_regime)
pre_and_post_responses <- NULL
for (i in 1:length(d$Answer.training_regime)){
pre_responses <- d$Answer.pretest_responses[1]
pre_responses <- substr(pre_responses, 2, 24)
pre_values <- as.integer(strsplit(pre_responses, ",")[[1]])
post_responses <- d$Answer.posttest_responses[i]
post_responses <- substr(post_responses, 2, 24)
post_values <- as.integer(strsplit(post_responses, ",")[[1]])
values <- c(pre_values, post_values)
pre_and_post_responses <- rbind(pre_and_post_responses, values)
}
relevant_df <- data.frame(pre_and_post_responses)
colnames(relevant_df) <- c("pre_1", "pre_2", "pre_3", "pre_4", "pre_5", "pre_6", "pre_7", "pre_8", "pre_9", "pre_10", "pre_11", "pre_12", "post_1", "post_2", "post_3", "post_4", "post_5", "post_6", "post_7", "post_8", "post_9", "post_10", "post_11", "post_12")
relevant_df
pre_and_post_responses <- NULL
for (i in 1:length(d$Answer.training_regime)){
pre_responses <- d$Answer.pretest_responses[i]
pre_responses <- substr(pre_responses, 2, 24)
pre_values <- as.integer(strsplit(pre_responses, ",")[[1]])
post_responses <- d$Answer.posttest_responses[i]
post_responses <- substr(post_responses, 2, 24)
post_values <- as.integer(strsplit(post_responses, ",")[[1]])
values <- c(pre_values, post_values)
pre_and_post_responses <- rbind(pre_and_post_responses, values)
}
relevant_df <- data.frame(pre_and_post_responses)
colnames(relevant_df) <- c("pre_1", "pre_2", "pre_3", "pre_4", "pre_5", "pre_6", "pre_7", "pre_8", "pre_9", "pre_10", "pre_11", "pre_12", "post_1", "post_2", "post_3", "post_4", "post_5", "post_6", "post_7", "post_8", "post_9", "post_10", "post_11", "post_12")
relevant_df
relevant_df$condition <- d$Answer.training_regime
relevant_df$time <- d$Answer.training_time
relevant_df$shape <- d$Answer.shape_of_focus
correct_responses <- c(0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1)
square_related <- c(1, 2, 3, 6, 9, 12)
rectangle_related <- c(2, 4, 5, 6, 8, 10)
rhombus_related <- c(3, 5, 7, 8, 9, 11)
parallelogram_related <- c(1, 4, 7, 10, 11, 12)
relevant_df$pre_correct <- 1:n_participants*0
relevant_df$post_correct <- 1:n_participants*0
relevant_df$pre_square_related <- 1:n_participants*0
relevant_df$post_square_related <- 1:n_participants*0
relevant_df$pre_rectangle_related <- 1:n_participants*0
relevant_df$post_rectangle_related <- 1:n_participants*0
relevant_df$pre_rhombus_related <- 1:n_participants*0
relevant_df$post_rhombus_related <- 1:n_participants*0
relevant_df$pre_parallelogram_related <- 1:n_participants*0
relevant_df$post_parallelogram_related <- 1:n_participants*0
for (i in 1:length(relevant_df$condition)) {
relevant_df$pre_correct[i] <- sum(correct_responses == relevant_df[i,1:12])
relevant_df$post_correct[i] <- sum(correct_responses == relevant_df[i,13:24])
relevant_df$pre_square_related[i] <- sum(correct_responses[square_related] == relevant_df[i,square_related])
relevant_df$post_square_related[i] <- sum(correct_responses[square_related] == relevant_df[i,(square_related + 12)])
relevant_df$pre_rectangle_related[i] <- sum(correct_responses[rectangle_related] == relevant_df[i,rectangle_related])
relevant_df$post_rectangle_related[i] <- sum(correct_responses[rectangle_related] == relevant_df[i,(rectangle_related + 12)])
relevant_df$pre_rhombus_related[i] <- sum(correct_responses[rhombus_related] == relevant_df[i,rhombus_related])
relevant_df$post_rhombus_related[i] <- sum(correct_responses[rhombus_related] == relevant_df[i,(rhombus_related + 12)])
relevant_df$pre_parallelogram_related[i] <- sum(correct_responses[parallelogram_related] == relevant_df[i,parallelogram_related])
relevant_df$post_parallelogram_related[i] <- sum(correct_responses[parallelogram_related] == relevant_df[i,(parallelogram_related + 12)])
}
relevant_df$pre_correct
relevant_df$post_correct
plot(relevant_df$pre_correct, relevant_df$post_correct)
cor(relevant_df$pre_correct, relevant_df$post_correct)
correct_responses <- c(0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1)
square_related <- c(1, 2, 3, 6, 9, 12)
rectangle_related <- c(2, 4, 5, 6, 8, 10)
rhombus_related <- c(3, 5, 7, 8, 9, 11)
parallelogram_related <- c(1, 4, 7, 10, 11, 12)
relevant_df$pre_correct <- 1:n_participants*0
relevant_df$post_correct <- 1:n_participants*0
relevant_df$pre_square_related <- 1:n_participants*0
relevant_df$post_square_related <- 1:n_participants*0
relevant_df$pre_rectangle_related <- 1:n_participants*0
relevant_df$post_rectangle_related <- 1:n_participants*0
relevant_df$pre_rhombus_related <- 1:n_participants*0
relevant_df$post_rhombus_related <- 1:n_participants*0
relevant_df$pre_parallelogram_related <- 1:n_participants*0
relevant_df$post_parallelogram_related <- 1:n_participants*0
for (i in 1:length(relevant_df$condition)) {
relevant_df$pre_correct[i] <- sum(correct_responses == relevant_df[i,1:12])
relevant_df$post_correct[i] <- sum(correct_responses == relevant_df[i,13:24])
relevant_df$pre_square_related[i] <- sum(correct_responses[square_related] == relevant_df[i,square_related])
relevant_df$post_square_related[i] <- sum(correct_responses[square_related] == relevant_df[i,(square_related + 12)])
relevant_df$pre_rectangle_related[i] <- sum(correct_responses[rectangle_related] == relevant_df[i,rectangle_related])
relevant_df$post_rectangle_related[i] <- sum(correct_responses[rectangle_related] == relevant_df[i,(rectangle_related + 12)])
relevant_df$pre_rhombus_related[i] <- sum(correct_responses[rhombus_related] == relevant_df[i,rhombus_related])
relevant_df$post_rhombus_related[i] <- sum(correct_responses[rhombus_related] == relevant_df[i,(rhombus_related + 12)])
relevant_df$pre_parallelogram_related[i] <- sum(correct_responses[parallelogram_related] == relevant_df[i,parallelogram_related])
relevant_df$post_parallelogram_related[i] <- sum(correct_responses[parallelogram_related] == relevant_df[i,(parallelogram_related + 12)])
}
relevant_df$reasonable_time <- relevant_df$time > 20000
relevant_df$correct_delta <- relevant_df$post_correct - relevant_df$pre_correct
relevant_df$square_delta <- relevant_df$post_square_related - relevant_df$pre_square_related
relevant_df$rectangle_delta <- relevant_df$post_rectangle_related - relevant_df$pre_rectangle_related
relevant_df$rhombus_delta <- relevant_df$post_rhombus_related - relevant_df$pre_rhombus_related
relevant_df$parallelogram_delta <- relevant_df$post_parallelogram_related - relevant_df$pre_parallelogram_related
means_by_condition <- aggregate(cbind(pre_square_related, post_square_related, pre_rectangle_related, post_rectangle_related,  pre_rhombus_related, post_rhombus_related, pre_parallelogram_related, post_parallelogram_related, pre_correct, post_correct, correct_delta, time) ~
condition + shape, data=relevant_df, mean)
means_by_condition
deltas_by_condition <- aggregate(cbind(correct_delta, square_delta, rectangle_delta, rhombus_delta, parallelogram_delta, time) ~
condition + shape, data=relevant_df, mean)
deltas_by_condition
