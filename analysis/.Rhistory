geom_bar(stat="identity", position="dodge") +
geom_linerange(aes( ymin = m - m.cil, ymax = m + m.cih),  position = position_dodge(width = 0.9)) +
geom_hline(yintercept = .5, lty = 2) +
ylim(0, 1) +
facet_grid(training_condition~.) +
scale_fill_solarized() +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
ggtitle("Accuracy on each question: Relational Test")
d1 <- filter(d1, remove == "no")
ms <- d1 %>%
filter(trial_type %in% c("relational", "entity")) %>%
group_by(training_condition, trial_type, block = as.factor(block)) %>%
summarise(m_acc = mean(correct),
m.cih = ci.high(correct),
m.cil = ci.low(correct))
ms %<>% mutate(chance_line = ifelse(trial_type == "relational", 0.5, 0.5))
ggplot(aes(x = block, y = m_acc, color = training_condition), data = ms) +
geom_pointrange(aes(ymin = m_acc - m.cil, ymax = m_acc + m.cih)) +
geom_line(aes(group=training_condition)) +
geom_hline(aes(yintercept = chance_line), linetype = "dashed") +
ylim(0.4,1.0) +
facet_grid(.~trial_type) +
scale_color_solarized()
ss_acc <- d1 %>%
filter(trial_type %in% c("relational", "entity")) %>%
group_by(subids, training_condition, block, trial_type) %>%
summarise(m_acc = mean(correct)) %>%
spread(key = block, value = m_acc) %>%
mutate(m_diff_score = posttest - pretest)
ms_change <- ss_acc %>%
group_by(training_condition, trial_type) %>%
summarise(m_change_score = mean(m_diff_score),
m.cih = ci.high(m_diff_score),
m.cil = ci.low(m_diff_score))
ggplot(aes(x = training_condition, y = m_change_score, fill = training_condition),
data = ms_change) +
geom_bar(stat = "identity") +
geom_linerange(aes(ymin = m_change_score - m.cil, ymax = m_change_score + m.cih)) +
geom_hline(yintercept = 0) +
facet_grid(.~trial_type) +
scale_fill_solarized() +
ylim(-0.2, 0.2) +
theme(axis.text.x = element_text(angle = 65, hjust = 1)) +
guides(fill=F)
ss_acc <- d1 %>%
filter(trial_type %in% c("relational", "entity")) %>%
group_by(subids, training_condition, block, trial_type) %>%
summarise(m_acc = mean(correct)) %>%
spread(key = block, value = m_acc) %>%
mutate(m_diff_score = posttest - pretest)
ms_change <- ss_acc %>%
group_by(training_condition, trial_type) %>%
summarise(m_change_score = mean(m_diff_score),
m.cih = ci.high(m_diff_score),
m.cil = ci.low(m_diff_score))
ggplot(aes(x = training_condition, y = m_change_score, fill = training_condition),
data = ms_change) +
geom_bar(stat = "identity") +
geom_linerange(aes(ymin = m_change_score - m.cil, ymax = m_change_score + m.cih)) +
geom_hline(yintercept = 0) +
facet_grid(.~trial_type) +
scale_fill_solarized() +
ylim(-0.1, 0.1) +
theme(axis.text.x = element_text(angle = 65, hjust = 1)) +
guides(fill=F)
d_shape_learned <- filter(d1, question == shape_learned | shape == shape_learned)
ms <- d_shape_learned %>%
filter(trial_type %in% c("relational")) %>%
group_by(question_and_shape, question, block, training_condition) %>%
summarise(m.cih = ci.high(correct),
m.cil = ci.low(correct),
m = mean(correct))
ggplot(aes(x = question_and_shape, y = m, fill = block), data = ms) +
geom_bar(stat="identity", position="dodge") +
geom_linerange(aes( ymin = m - m.cil, ymax = m + m.cih),  position = position_dodge(width = 0.9)) +
geom_hline(yintercept = .5, lty = 2) +
ylim(0, 1) +
facet_grid(training_condition~.) +
scale_fill_solarized() +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
ggtitle("Accuracy on each question: Relational Test")
ms <- d_shape_learned %>%
filter(trial_type %in% c("entity")) %>%
group_by(question_and_shape, question, training_condition, block) %>%
summarise(m.cih = ci.high(correct),
m.cil = ci.low(correct),
m = mean(correct))
ggplot(aes(x = question_and_shape, y = m, fill = block), data = ms) +
geom_bar(stat="identity", position="dodge") +
geom_linerange(aes( ymin = m - m.cil, ymax = m + m.cih),  position = position_dodge(width = 0.9)) +
ylim(0, 1) +
facet_grid(training_condition~.) +
scale_fill_solarized() +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
ggtitle("Accuracy on each question: Entity Test")
ms_shape <- d_shape_learned %>%
filter(trial_type %in% c("relational", "entity")) %>%
group_by(training_condition, trial_type, block = as.factor(block)) %>%
summarise(m_acc = mean(correct),
m.cih = ci.high(correct),
m.cil = ci.low(correct))
ms_shape$block <- factor(ms_shape$block, levels = c("pretest", "posttest"))
ms_shape %<>% mutate(chance_line = ifelse(trial_type == "relational", 0.5, 0.5))
ggplot(aes(x = block, y = m_acc, color = training_condition), data = ms_shape) +
geom_pointrange(aes(ymin = m_acc - m.cil, ymax = m_acc + m.cih)) +
geom_line(aes(group=training_condition)) +
geom_hline(aes(yintercept = chance_line), linetype = "dashed") +
ylim(0.4,1.0) +
facet_grid(.~trial_type) +
scale_color_solarized()
ss_acc_learned <- d_shape_learned %>%
filter(trial_type %in% c("relational", "entity")) %>%
group_by(subids, training_condition, block, trial_type) %>%
summarise(m_acc = mean(correct)) %>%
spread(key = block, value = m_acc) %>%
mutate(m_diff_score = posttest - pretest)
ms_change_learned <- ss_acc_learned %>%
group_by(training_condition, trial_type) %>%
summarise(m_change_score = mean(m_diff_score),
m.cih = ci.high(m_diff_score),
m.cil = ci.low(m_diff_score))
ggplot(aes(x = training_condition, y = m_change_score, fill = training_condition),
data = ms_change_learned) +
geom_bar(stat = "identity") +
geom_linerange(aes(ymin = m_change_score - m.cil, ymax = m_change_score + m.cih)) +
geom_hline(yintercept = 0) +
facet_grid(.~trial_type) +
scale_fill_solarized() +
ylim(-0.3, 0.3) +
guides(fill=F)
ss_acc_learned <- d_shape_learned %>%
filter(trial_type %in% c("relational", "entity")) %>%
group_by(subids, training_condition, block, trial_type) %>%
summarise(m_acc = mean(correct)) %>%
spread(key = block, value = m_acc) %>%
mutate(m_diff_score = posttest - pretest)
ms_change_learned <- ss_acc_learned %>%
group_by(training_condition, trial_type) %>%
summarise(m_change_score = mean(m_diff_score),
m.cih = ci.high(m_diff_score),
m.cil = ci.low(m_diff_score))
ggplot(aes(x = training_condition, y = m_change_score, fill = training_condition),
data = ms_change_learned) +
geom_bar(stat = "identity") +
geom_linerange(aes(ymin = m_change_score - m.cil, ymax = m_change_score + m.cih)) +
geom_hline(yintercept = 0) +
facet_grid(.~trial_type) +
scale_fill_solarized() +
ylim(-0.1, 0.1) +
guides(fill=F)
ss_acc_learned <- d_shape_learned %>%
filter(trial_type %in% c("relational", "entity")) %>%
group_by(subids, training_condition, block, trial_type) %>%
summarise(m_acc = mean(correct)) %>%
spread(key = block, value = m_acc) %>%
mutate(m_diff_score = posttest - pretest)
ms_change_learned <- ss_acc_learned %>%
group_by(training_condition, trial_type) %>%
summarise(m_change_score = mean(m_diff_score),
m.cih = ci.high(m_diff_score),
m.cil = ci.low(m_diff_score))
ggplot(aes(x = training_condition, y = m_change_score, fill = training_condition),
data = ms_change_learned) +
geom_bar(stat = "identity") +
geom_linerange(aes(ymin = m_change_score - m.cil, ymax = m_change_score + m.cih)) +
geom_hline(yintercept = 0) +
facet_grid(.~trial_type) +
scale_fill_solarized() +
ylim(-0.15, 0.15) +
guides(fill=F)
mm1 <- glmer(correct ~ training_condition * block + (1|subids),
data = filter(d1, trial_type %in% c("relational", "entity")),
family=binomial,
nAGQ = 1,
control = glmerControl(optimizer = "bobyqa"))
summary(mm1)
mm2 <- glmer(correct ~ training_condition * block * trial_type + (1|subids) ,
data = filter(d_shape_learned, trial_type %in% c("relational", "entity")),
family=binomial,
nAGQ = 1,
control = glmerControl(optimizer = "bobyqa"))
summary(mm2)
lm1 <- lm(m_diff_score ~ training_condition * trial_type,data = ss_acc)
summary(lm1)
ss_m <- d1 %>%
filter(trial_type %in% c("relational", "entity")) %>%
group_by(subids, training_condition, block, trial_type) %>%
summarise(m = mean(correct))
ggplot(aes(x = block, y = m, color = training_condition, group = as.factor(subids)), data = ss_m) +
geom_point() +
geom_line() +
facet_grid(training_condition~trial_type) +
scale_color_solarized()
View(d1)
ggplot(aes(x = train_time_min), data = ss) +
geom_histogram() +
facet_grid(.~training_condition)
ms <- d1 %>%
filter(trial_type %in% c("relational", "entity")) %>%
group_by(training_condition, block = as.factor(block)) %>%
summarise(m_acc = mean(correct),
m.cih = ci.high(correct),
m.cil = ci.low(correct))
ggplot(aes(x = block, y = m_acc, color = training_condition), data = ms) +
geom_pointrange(aes(ymin = m_acc - m.cil, ymax = m_acc + m.cih)) +
geom_line(aes(group=training_condition)) +
ylim(0.4,0.9) +
scale_color_solarized()
ms <- d_shape_learned %>%
filter(trial_type %in% c("relational", "entity")) %>%
group_by(training_condition, block = as.factor(block)) %>%
summarise(m_acc = mean(correct),
m.cih = ci.high(correct),
m.cil = ci.low(correct))
ggplot(aes(x = block, y = m_acc, color = training_condition), data = ms) +
geom_pointrange(aes(ymin = m_acc - m.cil, ymax = m_acc + m.cih)) +
geom_line(aes(group=training_condition)) +
ylim(0.4,0.9) +
scale_color_solarized()
ss <- d1 %>%
filter(trial_type %in% c("relational","entity")) %>%
group_by(subids, training_condition, block) %>%
summarise(m = mean(correct)) %>%
spread(key = block, value = m) %>%
mutate(tot_diff_score = posttest - pretest)
ms <- ss %>%
group_by(training_condition) %>%
summarise(m = mean(tot_diff_score),
ci_h = ci.high(tot_diff_score),
ci_l = ci.low(tot_diff_score))
ggplot(aes(x = training_condition, y = m, fill = training_condition), data = ms) +
geom_bar(stat = "identity") +
geom_linerange(aes(ymin = m - ci_l, ymax = m + ci_h)) +
geom_hline(yintercept = 0) +
guides(fill=F) +
scale_fill_solarized() +
ylim(-0.1, 0.1)
ss <- d1 %>%
filter(trial_type %in% c("relational","entity")) %>%
group_by(subids, training_condition, block) %>%
summarise(m = mean(correct)) %>%
spread(key = block, value = m) %>%
mutate(tot_diff_score = posttest - pretest)
ms <- ss %>%
filter(tot_diff_score > 0) %>%
group_by(training_condition) %>%
summarise(m = mean(tot_diff_score),
ci_h = ci.high(tot_diff_score),
ci_l = ci.low(tot_diff_score))
ggplot(aes(x = training_condition, y = m, fill = training_condition), data = ms) +
geom_bar(stat = "identity") +
geom_linerange(aes(ymin = m - ci_l, ymax = m + ci_h)) +
geom_hline(yintercept = 0) +
guides(fill=F) +
scale_fill_solarized() +
ylim(-0.1, 0.1)
ggplot(aes(x = training_condition, y = m, fill = training_condition), data = ms) +
geom_bar(stat = "identity") +
geom_linerange(aes(ymin = m - ci_l, ymax = m + ci_h)) +
geom_hline(yintercept = 0) +
guides(fill=F) +
scale_fill_solarized() +
ylim(-0.2, 0.2)
ss <- d1 %>%
filter(trial_type %in% c("relational","entity")) %>%
group_by(subids, training_condition, block) %>%
summarise(m = mean(correct)) %>%
spread(key = block, value = m) %>%
mutate(tot_diff_score = posttest - pretest)
ms <- ss %>%
filter(tot_diff_score < 0) %>%
group_by(training_condition) %>%
summarise(m = mean(tot_diff_score),
ci_h = ci.high(tot_diff_score),
ci_l = ci.low(tot_diff_score))
ggplot(aes(x = training_condition, y = m, fill = training_condition), data = ms) +
geom_bar(stat = "identity") +
geom_linerange(aes(ymin = m - ci_l, ymax = m + ci_h)) +
geom_hline(yintercept = 0) +
guides(fill=F) +
scale_fill_solarized() +
ylim(-0.2, 0.2)
ggplot(aes(x = training_condition, y = tot_diff_score, fill = training_condition), data = ss) +
geom_dotplot(binaxis = "y", stackdir = "center") +
scale_fill_solarized() +
guides(fill=F)
lm2 <- lm(tot_diff_score ~ training_condition, data = ss)
summary(lm2)
ss <- d_shape_learned %>%
filter(trial_type %in% c("relational","entity")) %>%
group_by(subids, training_condition, block) %>%
summarise(m = mean(correct)) %>%
spread(key = block, value = m) %>%
mutate(tot_diff_score = posttest - pretest)
ms <- ss %>%
group_by(training_condition) %>%
summarise(m = mean(tot_diff_score),
ci_h = ci.high(tot_diff_score),
ci_l = ci.low(tot_diff_score))
ggplot(aes(x = training_condition, y = m, fill = training_condition), data = ms) +
geom_bar(stat = "identity") +
geom_linerange(aes(ymin = m - ci_l, ymax = m + ci_h)) +
geom_hline(yintercept = 0) +
guides(fill=F) +
scale_fill_solarized() +
ylim(-0.2, 0.2) +
ggtitle("Total Difference Score for Learned Shape")
ss <- d1 %>%
filter(trial_type %in% c("relational","entity")) %>%
group_by(subids, training_condition, block, question, trial_type) %>%
summarise(m = mean(correct)) %>%
spread(key = block, value = m) %>%
mutate(tot_diff_score = posttest - pretest)
ms <- ss %>%
group_by(training_condition, question, trial_type) %>%
summarise(m = mean(tot_diff_score),
ci_h = ci.high(tot_diff_score),
ci_l = ci.low(tot_diff_score))
ggplot(aes(x = question, y = m, fill = training_condition), data = ms) +
geom_bar(stat = "identity") +
geom_linerange(aes(ymin = m - ci_l, ymax = m + ci_h)) +
geom_hline(yintercept = 0) +
facet_grid(trial_type~training_condition) +
guides(fill=F) +
scale_fill_solarized() +
ylim(-0.2, 0.2) +
ggtitle("Is a Rhombus also a ________?")
ss <- d1 %>%
filter(trial_type %in% c("relational","entity")) %>%
group_by(subids, training_condition, block, shape, trial_type) %>%
summarise(m = mean(correct)) %>%
spread(key = block, value = m) %>%
mutate(tot_diff_score = posttest - pretest)
ms <- ss %>%
group_by(training_condition, shape, trial_type) %>%
summarise(m = mean(tot_diff_score),
ci_h = ci.high(tot_diff_score),
ci_l = ci.low(tot_diff_score))
ggplot(aes(x = shape, y = m, fill = training_condition), data = ms) +
geom_bar(stat = "identity") +
geom_linerange(aes(ymin = m - ci_l, ymax = m + ci_h)) +
geom_hline(yintercept = 0) +
facet_grid(trial_type~training_condition) +
guides(fill=F) +
scale_fill_solarized() +
ylim(-0.3, 0.3) +
ggtitle("Click on all of the Rhombuses")
ss_rh_pretest <- d1 %>%
filter(trial_type == "entity", shape == shape_learned |question == shape_learned,
block == "pretest") %>%
group_by(subids) %>%
summarise(num_corr_rh_pre = sum(correct)) %>%
mutate(num_corr_rh_pre_fact = cut(num_corr_rh_pre, 4))
# merge with full data frame
d1 <- left_join(d1, ss_rh_pretest, by = "subids")
ss <- d1 %>%
filter(trial_type %in% c("relational","entity")) %>%
group_by(subids, training_condition, block, trial_type, num_corr_rh_pre_fact, num_corr_rh_pre) %>%
summarise(m = mean(correct)) %>%
spread(key = block, value = m) %>%
mutate(tot_diff_score = posttest - pretest)
ms <- ss %>%
group_by(training_condition, num_corr_rh_pre_fact) %>%
summarise(m = mean(tot_diff_score),
ci_h = ci.high(tot_diff_score),
ci_l = ci.low(tot_diff_score))
ggplot(aes(x = num_corr_rh_pre_fact, y = m, fill = training_condition), data = ms) +
geom_bar(stat = "identity") +
geom_linerange(aes(ymin = m - ci_l, ymax = m + ci_h)) +
geom_hline(yintercept = 0) +
facet_grid(.~training_condition) +
guides(fill=F) +
scale_fill_solarized() +
ylim(-0.55, 0.55)
ss <- d1 %>%
filter(trial_type %in% c("relational","entity"), remove == "no",
question == shape_learned | shape == shape_learned) %>%
group_by(subids, training_condition, block, trial_type) %>%
summarise(m = mean(correct)) %>%
spread(key = block, value = m) %>%
mutate(tot_diff_score = posttest - pretest)
ms <- ss %>%
group_by(training_condition, trial_type) %>%
summarise(m = mean(tot_diff_score),
ci_h = ci.high(tot_diff_score),
ci_l = ci.low(tot_diff_score))
ggplot(aes(x = training_condition, y = m, fill = training_condition), data = ms) +
geom_bar(stat = "identity") +
geom_linerange(aes(ymin = m - ci_l, ymax = m + ci_h)) +
geom_hline(yintercept = 0) +
guides(fill=F) +
scale_fill_solarized() +
ylim(-0.35, 0.35) +
facet_grid(.~trial_type)
ss_sampling <- d1 %>%
filter(trial_type == "training")
View(ss_sampling)
unique(d1$experiment)
ss_sampling <- d1 %>%
filter(trial_type == "training", experiment == "random_passive")
View(ss_sampling)
ss_sampling <- d1 %>%
filter(trial_type == "training", experiment == "random_passive",
training_condition %in% c("active_active", "passive_passive"))
View(ss_sampling)
ss_sampling <- d1 %>%
filter(trial_type == "training", experiment == "random_passive",
training_condition %in% c("active_active", "passive_passive")) %>%
mutate(question_shape = paste(shape, "_", question))
ss_sampling <- d1 %>%
filter(trial_type == "training", experiment == "random_passive",
training_condition %in% c("active_active", "passive_passive")) %>%
mutate(question_shape = paste(shape,"_",question))
View(ss_sampling)
ss_sampling <- d1 %>%
filter(trial_type == "training", experiment == "random_passive",
training_condition %in% c("active_active", "passive_passive")) %>%
mutate(question_and_shape = paste(shape, question, shape = "_"))
ss_sampling <- d1 %>%
filter(trial_type == "training", experiment == "random_passive",
training_condition %in% c("active_active", "passive_passive")) %>%
mutate(question_and_shape = paste(shape, question, sep = "_"))
flag_correct_key <- function (question_and_shape) {
switch(question_and_shape,
parallelogram_rectangle = {correct_answer <- "no"},
rectangle_rhombus = {correct_answer <- "no"},
rhombus_rectangle = {correct_answer <- "no"},
rhombus_square = {correct_answer <- "no"},
square_rhombus = {correct_answer <- "yes"},
square_parallelogram = {correct_answer <- "yes"},
rectangle_square = {correct_answer <- "no"},
parallelogram_rhombus = {correct_answer <- "no"},
parallelogram_square = {correct_answer <- "no"},
square_rectangle = {correct_answer <- "yes"},
rhombus_parallelogram = {correct_answer <- "yes"},
rectangle_parallelogram = {correct_answer <- "yes"},
parallelogram_parallelogram = {correct_answer <- "yes"},
rhombus_rhombus = {correct_answer <- "yes"},
square_square = {correct_answer <- "yes"},
rectangle_rectangle = {correct_answer <- "yes"})
return(correct_answer)
}
# takes in a row of a data frame
# and based on values in that row
# returns if the trial was correct or incorrect
flag_correct_trial <- function (trial) {
# grab stuff we need from the trial vector
question_and_shape <- as.character(trial[which(names(trial)=="question_and_shape")])
response <- as.character(trial[which(names(trial)=="response")])
# check answer key
correct_answer <- flag_correct_key(question_and_shape)
# check ss response against the key and return T/F for each trial
correct <- response == correct_answer
return(correct)
}
tmp <- ss_sampling %>%
rowwise() %>%
mutate(correct = flag_correct_trial())
tmp <- ss_sampling %>%
rowwise() %>%
mutate(correct = flag_correct_trial(.))
flag_correct_key <- function (question_and_shape) {
switch(question_and_shape,
parallelogram_rectangle = {correct_answer <- "no"},
rectangle_rhombus = {correct_answer <- "no"},
rhombus_rectangle = {correct_answer <- "no"},
rhombus_square = {correct_answer <- "no"},
square_rhombus = {correct_answer <- "yes"},
square_parallelogram = {correct_answer <- "yes"},
rectangle_square = {correct_answer <- "no"},
parallelogram_rhombus = {correct_answer <- "no"},
parallelogram_square = {correct_answer <- "no"},
square_rectangle = {correct_answer <- "yes"},
rhombus_parallelogram = {correct_answer <- "yes"},
rectangle_parallelogram = {correct_answer <- "yes"},
parallelogram_parallelogram = {correct_answer <- "yes"},
rhombus_rhombus = {correct_answer <- "yes"},
square_square = {correct_answer <- "yes"},
rectangle_rectangle = {correct_answer <- "yes"})
return(correct_answer)
}
# takes in a row of a data frame
# and based on values in that row
# returns if the trial was correct or incorrect
flag_correct_trial <- function (trial) {
# grab stuff we need from the trial vector
question_and_shape <- as.character(trial[which(names(trial)=="question_and_shape")])
response <- as.character(trial[which(names(trial)=="response")])
# check answer key
correct_answer <- flag_correct_key(question_and_shape)
# check ss response against the key and return T/F for each trial
correct <- response == correct_answer
correct
}
tmp <- ss_sampling %>%
rowwise() %>%
mutate(correct = flag_correct_trial(.))
correct <- apply(ss_sampling, 1, flag_correct_trial)
ss_sampling <- cbind(ss_sampling, correct)
ss_sampling <- d1 %>%
filter(trial_type == "training", experiment == "random_passive",
training_condition %in% c("active_active", "passive_passive")) %>%
mutate(question_and_shape = paste(shape, question, sep = "_"))
correct <- apply(ss_sampling, 1, flag_correct_trial)
ss_sampling$correct <- NULL
# merge correct info with main df
ss_sampling <- cbind(ss_sampling, correct)
View(ss_sampling)
View(d1)
d1 <- read.csv("../data/quadmods-sequences-exp1_2.csv", header=TRUE,
row.names=NULL, stringsAsFactors = FALSE)
View(d1)
